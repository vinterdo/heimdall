{"version":3,"sources":["store/ducks/layout/utils.ts","store/ducks/layout/reducers.ts","store/store.ts","store/ducks/layout/types.ts","view/GlobalStyle.ts","view/layout/WindowFactory.ts","view/exampleWindows/ExampleDropdown.tsx","view/exampleWindows/ExampleForm.tsx","view/layout/TabsTopBar.tsx","store/ducks/layout/actions.ts","view/layout/WindowSelect.tsx","view/layout/Reparentable.tsx","view/layout/DraggableWindow.tsx","view/layout/Dock.tsx","view/layout/LayoutNode.tsx","view/layout/Tab.tsx","view/layout/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["findNodeByNodeId","id","layout","node","i","undefined","charAt","a","b","initialState","tabs","rootNode","windowToNode","nodeToWindow","windowIdToType","currentTab","copyState","oldState","newState","JSON","parse","stringify","Error","doCloseTab","state","tabName","keys","Object","length","nextTabIndex","currentTabIndex","indexOf","doOpenNewWindow","payload","nodeId","windowId","windowType","doCreateNewTab","doSwitchTab","doCloseNode","parentId","substr","ownSide","currentNodeParent","siblingNode","split","splitValue","reduceNodeUp","handleChild","newId","doMoveWindowBetweenNodes","oldNodeId","newNodeId","doUpdateSplitValue","newSplit","currentNode","windowSplit","assign","rootPersistConfig","key","storage","whitelist","appReducer","combineReducers","action","type","rootReducer","createGlobalStyle","WindowFactory","templates","Map","name","template","this","has","set","currentId","get","window","Array","from","map","windowFactory","options","value","label","PlusButton","styled","button","props","useSelector","useState","newTabName","setNewTabName","dispatch","useDispatch","isAdding","setAdding","onClose","event","closeTab","stopPropagation","className","tab","onClick","switchTab","style","background","icon","onChange","target","getSuggestions","escapedValue","trim","replace","getAvailableTemplates","regex","RegExp","filter","suggestion","test","getSuggestionValue","renderSuggestion","shouldRenderSuggestions","onSelected","setValue","suggestions","setSuggestions","inputProps","placeholder","_","newValue","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","store","getMountNode","uid","inUse","mountNode","document","createElement","Reparentable","el","appendChild","renderChildrenIntoNode","setTimeout","ReactDOM","unmountComponentAtNode","unstable_renderSubtreeIntoContainer","children","ref","Component","useDrag","item","collect","monitor","opacity","isDragging","drag","DockHeader","div","HeaderTitle","HeaderIcons","DockingArea","isOver","dockedWindow","useDrop","accept","drop","getItem","moveWindowBetweenNodes","renderer","getRenderer","onSplitHorizontal","onSplitVertical","createWindow","openNewWindow","console","log","SplitPaneStyled","SplitPane","SplitWrapper","LayoutNode","splitRef","useRef","defaultSize","onDragFinished","width","current","offsetWidth","offsetHeight","maxSize","minSize","Dock","TabWrapper","DndProvider","backend","Backend","library","add","faTimes","faGripLines","faGripLinesVertical","middlewareEnhancer","applyMiddleware","createStore","persistReducer","persistor","persistStore","configureStore","addTemplate","ExampleDropdown","ExampleForm","Boolean","location","hostname","match","render","loading","GlobalStyle","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c3282fc.chunk.js","sourcesContent":["import {ILayoutNode} from \"./types\";\n\nexport const findNodeByNodeId = (id: string, layout: ILayoutNode) => {\n    let node: ILayoutNode | undefined = layout;\n    let i = 0;\n    while (node !== undefined && node.id !== id) {\n        if (id.charAt(i) === 'a') {\n            node = node.a;\n        } else {\n            node = node.b;\n        }\n        i++;\n    }\n    return node;\n};\n","import {\n    CLOSE_NODE_ACTION,\n    CLOSE_TAB,\n    CREATE_NEW_TAB,\n    ILayoutNode,\n    ILayoutState,\n    ILayoutTab,\n    LayoutActionTypes,\n    MOVE_WINDOW_BETWEEN_NODES,\n    OPEN_NEW_WINDOW,\n    SPLIT_NODE_HORIZONTALLY_ACTION,\n    SPLIT_NODE_VERTICALLY_ACTION,\n    SWITCH_TAB,\n    UPDATE_SPLIT_VALUE\n} from \"./types\";\nimport {findNodeByNodeId} from \"./utils\";\n\nconst initialState: ILayoutState = {\n    tabs: {\n        \"default\": {\n            rootNode: {id: \"\", a: undefined, b: undefined},\n            windowToNode: {},\n            nodeToWindow: {},\n        }\n    },\n    windowIdToType: {},\n    currentTab: \"default\"\n};\n\nexport default function layoutReducer(state = initialState, action: LayoutActionTypes): ILayoutState {\n    switch (action.type) {\n        case SPLIT_NODE_HORIZONTALLY_ACTION:\n            return windowSplit(state, action.payload.nodeId, \"horizontal\");\n        case SPLIT_NODE_VERTICALLY_ACTION:\n            return windowSplit(state, action.payload.nodeId, \"vertical\");\n        case CLOSE_NODE_ACTION:\n            return doCloseNode(state, action.payload.nodeId);\n        case MOVE_WINDOW_BETWEEN_NODES:\n            return doMoveWindowBetweenNodes(state, action.payload);\n        case OPEN_NEW_WINDOW:\n            return doOpenNewWindow(state, action.payload);\n        case CREATE_NEW_TAB:\n            return doCreateNewTab(state, action.payload.tabName);\n        case SWITCH_TAB:\n            return doSwitchTab(state, action.payload.tabName);\n        case UPDATE_SPLIT_VALUE:\n            return doUpdateSplitValue(state, action.payload.nodeId, action.payload.newSplit);\n        case CLOSE_TAB:\n            return doCloseTab(state, action.payload.tabName);\n        default:\n            return state;\n    }\n}\n\nfunction copyState(oldState: ILayoutState): { newState: ILayoutState, currentTab: ILayoutTab } {\n    const newState: ILayoutState = JSON.parse(JSON.stringify(oldState));\n    const currentTab = newState.tabs[newState.currentTab];\n    if (currentTab === undefined) {\n        throw Error(\"current tab not found, state malformed\");\n    }\n    return {newState, currentTab};\n}\n\nfunction doCloseTab(state: ILayoutState, tabName: string) {\n    const {newState} = copyState(state);\n    // 1. remove all windows on this tab\n    // TODO\n    // 2. switch to previous tab\n    const keys = Object.keys(state.tabs);\n    if(keys.length === 1) {\n        // 4. do not allow to close last tab\n        // TODO: better handling\n        return state;\n    }\n    const currentTabIndex = keys.indexOf(tabName);\n    let nextTabIndex;\n    if(currentTabIndex === keys.length - 1) {\n        // if its last tab, switch to previous\n        nextTabIndex = keys.length - 2;\n    } else {\n        // else switch to next tab\n        nextTabIndex = currentTabIndex + 1;\n    }\n    newState.currentTab = keys[nextTabIndex];\n\n    // 3. remove tab\n    delete newState.tabs[tabName];\n    return newState;\n}\n\nfunction doOpenNewWindow(state: ILayoutState, payload: { nodeId: string, windowId: number, windowType: string }) {\n    const {nodeId, windowId, windowType} = payload;\n    const {newState, currentTab} = copyState(state);\n    currentTab.nodeToWindow[nodeId] = windowId;\n    currentTab.windowToNode[windowId] = nodeId;\n    newState.windowIdToType[windowId] = windowType;\n    return newState;\n}\n\nfunction doCreateNewTab(state: ILayoutState, tabName: string) {\n    if (state.tabs[tabName]) {\n        return state;\n    }\n    const {newState} = copyState(state);\n    newState.tabs[tabName] = {\n        rootNode: {id: \"\", a: undefined, b: undefined},\n        nodeToWindow: {},\n        windowToNode: {}\n    };\n    newState.currentTab = tabName;\n    return newState;\n}\n\nfunction doSwitchTab(state: ILayoutState, tabName: string) {\n    if (!state.tabs[tabName]) {\n        return state;\n    }\n    const {newState} = copyState(state);\n    newState.currentTab = tabName;\n    return newState;\n}\n\nfunction doCloseNode(state: ILayoutState, nodeId: string) {\n    /*\n        cases here:\n        1. closed node is empty, sibling is empty\n        2. closed node is full, sibling is empty\n        3. closed noe is empty, sibling has window\n        4. closed node is empty, sibling has childs\n     */\n    const {newState, currentTab} = copyState(state);\n    const id = nodeId;\n    const parentId = id.substr(0, id.length - 1);\n    const ownSide = id.substr(id.length - 1, id.length);\n    const currentNodeParent = findNodeByNodeId(parentId, currentTab.rootNode);\n    if (currentNodeParent === undefined) {\n        throw Error(\"current node parent not found\");\n    }\n    const siblingNode = ownSide === 'a' ? currentNodeParent.b : currentNodeParent.a;\n\n    if (siblingNode === undefined) {\n        throw Error(\"current node sibling not found\");\n    }\n\n    if (currentTab.nodeToWindow[nodeId]) {\n        delete currentTab.windowToNode[currentTab.nodeToWindow[nodeId]];\n        delete currentTab.nodeToWindow[nodeId];\n    }\n    if (currentTab.nodeToWindow[siblingNode.id]) {\n        currentTab.nodeToWindow[parentId] = currentTab.nodeToWindow[siblingNode.id];\n        delete currentTab.nodeToWindow[siblingNode.id];\n        currentTab.windowToNode[currentTab.nodeToWindow[parentId]] = parentId;\n    }\n\n    // reduce sibling tree to parent\n    function reduceNodeUp(node: ILayoutNode | undefined) {\n        if (!node) {\n            return;\n        }\n\n        function handleChild(node: ILayoutNode | undefined, newId: string) {\n            if (node) {\n                const windowId = currentTab.nodeToWindow[node.id];\n                delete currentTab.nodeToWindow[node.id];\n                node.id = newId;\n                currentTab.nodeToWindow[node.id] = windowId;\n                currentTab.windowToNode[windowId] = node.id;\n            }\n        }\n\n        handleChild(node.a, node.id + \"a\");\n        handleChild(node.b, node.id + \"b\");\n        reduceNodeUp(node.a);\n        reduceNodeUp(node.b);\n    }\n\n    currentNodeParent.a = siblingNode.a;\n    currentNodeParent.b = siblingNode.b;\n    currentNodeParent.split = siblingNode.split;\n    currentNodeParent.splitValue = siblingNode.splitValue;\n    reduceNodeUp(currentNodeParent);\n\n    return newState;\n}\n\nfunction doMoveWindowBetweenNodes(state: ILayoutState, payload: { oldNodeId: string, newNodeId: string, windowId: number }) {\n    const {oldNodeId, newNodeId, windowId} = payload;\n    const {newState, currentTab} = copyState(state);\n    currentTab.windowToNode[windowId] = newNodeId;\n    currentTab.nodeToWindow[newNodeId] = windowId;\n    delete currentTab.nodeToWindow[oldNodeId];\n    return newState;\n}\n\nfunction doUpdateSplitValue(state: ILayoutState, nodeId: string, newSplit: number): ILayoutState {\n    const {newState, currentTab} = copyState(state);\n    const currentNode = findNodeByNodeId(nodeId, currentTab.rootNode);\n    if (currentNode === undefined) {\n        throw Error(\"current node not found\");\n    }\n    currentNode.splitValue = newSplit;\n    return newState;\n}\n\nfunction windowSplit(state: ILayoutState, nodeId: string, split: \"horizontal\" | \"vertical\") {\n    const {newState, currentTab} = copyState(state);\n    const currentNode = findNodeByNodeId(nodeId, currentTab.rootNode);\n    if (currentNode === undefined) {\n        throw Error(\"current node not found\");\n    }\n\n    currentNode.a = Object.assign({}, currentNode);\n    currentNode.a.id += \"a\";\n    if (currentTab.nodeToWindow[currentNode.id]) {\n        currentTab.nodeToWindow[currentNode.a.id] = currentTab.nodeToWindow[currentNode.id];\n        delete currentTab.nodeToWindow[currentNode.id];\n\n        currentTab.windowToNode[currentTab.nodeToWindow[currentNode.a.id]] = currentNode.id + \"a\";\n    }\n    currentNode.b = {id: currentNode.id + \"b\"};\n    currentNode.split = split;\n    currentNode.splitValue = 50;\n    return newState;\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport * as layoutDuck from \"./ducks/layout\";\n\nconst rootPersistConfig = {\n    key: \"root\",\n    storage,\n    whitelist: [\"layout\"]\n};\n\nconst appReducer = combineReducers({\n    layout: layoutDuck.reducer,\n});\n\nconst rootReducer = (state: any, action: any) => {\n    return appReducer(state, action);\n};\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport type AppAction = layoutDuck.types.LayoutActionTypes;\n\nexport default function configureStore() {\n    const middlewares = [];\n    if (process.env.NODE_ENV !== \"production\") {\n        middlewares.push(logger);\n    }\n    const middlewareEnhancer = applyMiddleware(...middlewares);\n\n    const store = createStore(persistReducer(rootPersistConfig, rootReducer), middlewareEnhancer);\n    const persistor = persistStore(store);\n\n    return { store, persistor };\n}","// STATE\n\nexport interface ILayoutState {\n    tabs: {\n        [key: string]: ILayoutTab\n    }\n    windowIdToType: {\n        [key: number]: string\n    }\n    currentTab: string\n}\n\nexport interface ILayoutTab {\n    rootNode: ILayoutNode\n    windowToNode: {\n        [key: number]: string,\n    },\n    nodeToWindow: {\n        [key: string]: number\n    }\n}\n\nexport interface ILayoutNode {\n    a?: ILayoutNode,\n    b?: ILayoutNode,\n    id: string,\n    splitValue?: number,\n    split?: \"vertical\" | \"horizontal\"\n}\n\n// ACTIONS\n\nexport const SPLIT_NODE_VERTICALLY_ACTION = \"SPLIT_NODE_VERTICALLY_ACTION\";\nexport const SPLIT_NODE_HORIZONTALLY_ACTION = \"SPLIT_NODE_HORIZONTALLY_ACTION\";\nexport const CLOSE_NODE_ACTION = \"CLOSE_NODE_ACTION\";\nexport const MOVE_WINDOW_BETWEEN_NODES = \"MOVE_WINDOW_BETWEEN_NODES\";\nexport const OPEN_NEW_WINDOW = \"OPEN_NEW_WINDOW\";\nexport const CREATE_NEW_TAB = \"CREATE_NEW_TAB\";\nexport const SWITCH_TAB = \"SWITCH_TAB\";\nexport const UPDATE_SPLIT_VALUE = \"UPDATE_SPLIT_VALUE\";\nexport const CLOSE_TAB = \"CLOSE_TAB\";\n\nexport interface ISplitNodeVerticallyAction {\n    type: typeof SPLIT_NODE_VERTICALLY_ACTION\n    payload: {\n        nodeId: string\n    }\n}\n\nexport interface ISplitNodeHorizontallyAction {\n    type: typeof SPLIT_NODE_HORIZONTALLY_ACTION\n    payload: {\n        nodeId: string\n    }\n}\n\nexport interface ICloseNodeAction {\n    type: typeof CLOSE_NODE_ACTION\n    payload: {\n        nodeId: string\n    }\n}\n\nexport interface IMoveNodeBetweenWindows {\n    type: typeof MOVE_WINDOW_BETWEEN_NODES\n    payload: {\n        oldNodeId: string\n        newNodeId: string\n        windowId: number\n    }\n}\n\nexport interface IOpenNewWindow {\n    type: typeof OPEN_NEW_WINDOW,\n    payload: {\n        nodeId: string,\n        windowId: number,\n        windowType: string\n    }\n}\n\nexport interface ICreateNewTab {\n    type: typeof CREATE_NEW_TAB,\n    payload: {\n        tabName: string\n    }\n}\n\nexport interface ISwitchTab {\n    type: typeof SWITCH_TAB,\n    payload: {\n        tabName: string\n    }\n}\n\nexport interface IUpdateSplitValue {\n    type: typeof UPDATE_SPLIT_VALUE,\n    payload: {\n        nodeId: string,\n        newSplit: number\n    }\n}\n\nexport interface ICloseTab {\n    type: typeof CLOSE_TAB,\n    payload: {\n        tabName: string\n    }\n}\n\nexport type LayoutActionTypes =\n    ICloseNodeAction |\n    ISplitNodeHorizontallyAction |\n    ISplitNodeVerticallyAction |\n    IMoveNodeBetweenWindows |\n    IOpenNewWindow |\n    ICreateNewTab |\n    ISwitchTab |\n    IUpdateSplitValue |\n    ICloseTab;","import {createGlobalStyle} from \"styled-components\";\n\nexport default createGlobalStyle`\n  html {\n    height: 100%;\n    width: 100%;\n  }\n  body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n  .Resizer {\n    background: #000;\n    opacity: 0.2;\n    z-index: 1;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    -moz-background-clip: padding;\n    -webkit-background-clip: padding;\n    background-clip: padding-box;\n  }\n  \n  .Resizer:hover {\n    -webkit-transition: all 1s ease;\n    transition: all 1s ease;\n  }\n  \n  .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-top: 5px solid rgba(255, 255, 255, 0);\n    border-bottom: 5px solid rgba(255, 255, 255, 0);\n    cursor: row-resize;\n    width: 100%;\n  }\n  \n  .Resizer.horizontal:hover {\n    border-top: 5px solid rgba(0, 0, 0, 0.5);\n    border-bottom: 5px solid rgba(0, 0, 0, 0.5);\n  }\n  \n  .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-left: 5px solid rgba(255, 255, 255, 0);\n    border-right: 5px solid rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  \n  .Resizer.vertical:hover {\n    border-left: 5px solid rgba(0, 0, 0, 0.5);\n    border-right: 5px solid rgba(0, 0, 0, 0.5);\n  }\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n  \n.react-autosuggest__container {\n  position: relative;\n}\n\n.react-autosuggest__input {\n  width: 240px;\n  height: 30px;\n  padding: 10px 20px;\n  font-family: Helvetica, sans-serif;\n  font-weight: 300;\n  font-size: 16px;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n}\n\n.react-autosuggest__input--focused {\n  outline: none;\n}\n\n.react-autosuggest__input--open {\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.react-autosuggest__suggestions-container {\n  display: none;\n}\n\n.react-autosuggest__suggestions-container--open {\n  display: block;\n  position: absolute;\n  top: 51px;\n  width: 280px;\n  border: 1px solid #aaa;\n  background-color: #fff;\n  font-family: Helvetica, sans-serif;\n  font-weight: 300;\n  font-size: 16px;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  z-index: 2;\n}\n\n.react-autosuggest__suggestions-list {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n\n.react-autosuggest__suggestion {\n  cursor: pointer;\n  padding: 10px 20px;\n}\n\n.react-autosuggest__suggestion--highlighted {\n  background-color: #ddd;\n}\n\n`;","class WindowFactory {\n    private templates: Map<string, () => React.ReactElement> = new Map<string, () => React.ReactElement>();\n    private static currentId = 1;\n\n    public addTemplate(name: string, template: () => React.ReactElement ) {\n        if(this.templates.has(name)) {\n            throw Error(\"duplicated name \" + name)\n        }\n        this.templates.set(name, template);\n    }\n\n    public createWindow(name: string): {id: number, window: React.ReactElement} {\n        if(!this.templates.has(name)) {\n            throw new Error(\"Template with name \" + name + \" is not registered\");\n        }\n        const id = WindowFactory.currentId;\n        WindowFactory.currentId++;\n        const template = this.templates.get(name);\n        if(!template) {\n            throw new Error(\"dafuq\");\n        }\n        return {\n            id,\n            window: template()\n        }\n    }\n\n    public getAvailableTemplates() : {name: string}[] {\n        return Array.from(this.templates.keys()).map(name => {return {name}});\n    }\n\n    public getRenderer(name: string) {\n        return this.templates.get(name)\n    }\n}\n\nconst windowFactory = new WindowFactory();\n\nexport default windowFactory;","import React from \"react\";\nimport Select from \"react-select\";\n\nexport default () => {\n    return (\n        <>\n            <div>\n                <Select options={[\n                    {value: 'chocolate', label: 'Chocolate'},\n                    {value: 'strawberry', label: 'Strawberry'},\n                    {value: 'vanilla', label: 'Vanilla'}\n                ]}/>\n            </div>\n        </>\n    )\n}","import React from \"react\";\n\nexport default () => {\n    return (<>Form</>)\n}","import styled from \"styled-components\";\nimport * as React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppState} from \"../../store/store\";\nimport {useState} from \"react\";\nimport {closeTab, createNewTab, switchTab} from \"../../store/ducks/layout/actions\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst PlusButton = styled.button`\n  background: #EEE;\n`;\n\nconst TabsTopBar = (props: { className?: string }) => {\n    const tabs = useSelector((state: AppState) => Object.keys(state.layout.tabs));\n    const currentTab = useSelector((state: AppState) => state.layout.currentTab);\n    const [newTabName, setNewTabName] = useState<string | null>(null);\n    const dispatch = useDispatch();\n    const [isAdding, setAdding] = useState<boolean>(false);\n\n    const onPlus = () => {\n        if(isAdding) {\n            setAdding(false);\n            if(!newTabName) {\n                return;\n            }\n            dispatch(createNewTab(newTabName));\n        }\n        else {\n            setAdding(true);\n        }\n    };\n\n    const onNameChange = (event: any) => {\n        setNewTabName(event.target.value);\n    };\n\n    const onTabClick = (tabName: string) => () => {\n        dispatch(switchTab(tabName));\n    };\n\n    const onClose = (tabName: string) => (event: {stopPropagation: () => void}) => {\n        dispatch(closeTab(tabName));\n        event.stopPropagation();\n    };\n\n    return (\n        <div className={props.className}>\n            {\n                tabs.map(tab =>\n                    <button key={tab}\n                            onClick={onTabClick(tab)}\n                            style={{background: currentTab === tab ? \"#DDD\" : \"#EFEFEF\"}}>\n                        {tab}\n                        <FontAwesomeIcon icon=\"times\" onClick={onClose(tab)}/>\n                    </button>)\n            }\n            {isAdding && <input type={\"text\"} onChange={onNameChange}/>}\n            <PlusButton onClick={onPlus}>+</PlusButton>\n        </div>\n    );\n};\n\nexport default styled(TabsTopBar)`\n  display: flex;\n  flex-direction: row;\n  &>button {\n    padding: 0.5rem 1rem;\n    font-size: 1rem;\n    border: none;\n    border-right: 2px solid white;\n  }\n`;","import * as LayoutTypes from \"./types\";\n\nexport function closeNode(nodeId: string): LayoutTypes.LayoutActionTypes {\n    return {\n        type: LayoutTypes.CLOSE_NODE_ACTION,\n        payload: {nodeId}\n    }\n}\n\nexport function splitNodeVertically(nodeId: string): LayoutTypes.LayoutActionTypes {\n    return {\n        type: LayoutTypes.SPLIT_NODE_VERTICALLY_ACTION,\n        payload: {nodeId}\n    }\n}\n\nexport function splitNodeHorizontally(nodeId: string): LayoutTypes.LayoutActionTypes {\n    return {\n        type: LayoutTypes.SPLIT_NODE_HORIZONTALLY_ACTION,\n        payload: {nodeId}\n    }\n}\n\nexport function moveWindowBetweenNodes(oldNodeId: string, newNodeId: string, windowId: number): LayoutTypes.LayoutActionTypes {\n    return {\n        type: LayoutTypes.MOVE_WINDOW_BETWEEN_NODES,\n        payload: {\n            oldNodeId,\n            newNodeId,\n            windowId\n        }\n    }\n}\n\nexport function openNewWindow(nodeId: string, windowId: number, windowType: string): LayoutTypes.LayoutActionTypes {\n    return {\n        type: LayoutTypes.OPEN_NEW_WINDOW,\n        payload: {\n            nodeId,\n            windowId,\n            windowType\n        }\n    }\n}\n\nexport function switchTab(tabName: string): LayoutTypes.LayoutActionTypes {\n    return {\n        type: LayoutTypes.SWITCH_TAB,\n        payload: {\n            tabName\n        }\n    }\n}\n\nexport function createNewTab(tabName: string): LayoutTypes.LayoutActionTypes {\n    return {\n        type: LayoutTypes.CREATE_NEW_TAB,\n        payload: {\n            tabName\n        }\n    }\n}\n\nexport function updateSplitValue(nodeId: string, newSplit: number): LayoutTypes.LayoutActionTypes {\n    return {\n        type: LayoutTypes.UPDATE_SPLIT_VALUE,\n        payload: {\n            nodeId,\n            newSplit\n        }\n    }\n}\n\nexport function closeTab(tabName: string): LayoutTypes.LayoutActionTypes {\n    return {\n        type: LayoutTypes.CLOSE_TAB,\n        payload: {\n            tabName\n        }\n    }\n}","import {useState} from \"react\";\nimport * as React from \"react\";\nimport Autosuggest, {SuggestionSelectedEventData} from \"react-autosuggest\";\nimport windowFactory from \"./WindowFactory\";\nimport styled from \"styled-components\";\n\ninterface ISuggestion {\n    name: string;\n}\n\nfunction escapeRegexCharacters(str: string) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value: string): ISuggestion[] {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n        return windowFactory.getAvailableTemplates();\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n\n    return windowFactory.getAvailableTemplates().filter(suggestion => regex.test(suggestion.name));\n}\n\nfunction getSuggestionValue(suggestion: { name: string }) {\n    return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion: { name: string }) {\n    return (\n        <span>{suggestion.name}</span>\n    );\n}\n\nfunction shouldRenderSuggestions() {\n    return true;\n}\n\nconst onSuggestionSelected = (onSelected: (name: string) => void) => (\n    event: React.FormEvent<any>,\n    {suggestion}: SuggestionSelectedEventData<{ name: string }>) => {\n    onSelected(suggestion.name);\n};\n\nconst WindowSelect = (props: {\n    id: string,\n    onChange?: (id: string, newValue: string) => void,\n    placeholder: string,\n    onSelected?: (name: string) => void,\n    className?: string\n}) => {\n    const [value, setValue] = useState<string>(\"\");\n    const [suggestions, setSuggestions] = useState<ISuggestion[]>(getSuggestions(\"\"));\n\n    const onChange = (_: any, {newValue}: { newValue: string }) => {\n        const {id, onChange} = props;\n        setValue(newValue);\n        onChange && onChange(id, newValue)\n    };\n\n    const onSuggestionsFetchRequested = ({value}: { value: string }) => {\n        setSuggestions(getSuggestions(value));\n    };\n\n    const onSuggestionsClearRequested = () => {\n        setSuggestions([]);\n    };\n\n    const inputProps = {\n        placeholder: props.placeholder,\n        value,\n        onChange: onChange\n    };\n\n    return (\n        <div className={props.className}>\n            <Autosuggest\n                id={props.id}\n                suggestions={suggestions}\n                onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={onSuggestionsClearRequested}\n                shouldRenderSuggestions={shouldRenderSuggestions}\n                onSuggestionSelected={props.onSelected && onSuggestionSelected(props.onSelected)}\n                getSuggestionValue={getSuggestionValue}\n                renderSuggestion={renderSuggestion}\n                inputProps={inputProps}\n            />\n        </div>\n    );\n};\n\nexport default styled(WindowSelect)`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface IReparentableStore {\n    [key: string]: {\n        mountNode:  HTMLElementTagNameMap[\"div\"]\n        inUse: boolean\n    }\n}\n\nconst store: IReparentableStore = {};\n\nfunction getMountNode(uid: string) {\n    if (!store[uid]) {\n        store[uid] = {\n            mountNode: document.createElement('div'),\n            inUse: true\n        };\n    } else {\n        store[uid].inUse = true;\n    }\n\n    return store[uid].mountNode;\n}\n\nfunction removeMountNode(uid: string) {\n    const record = store[uid];\n\n    record.inUse = false;\n\n    setTimeout(() => {\n        if (!store[uid].inUse) {\n            ReactDOM.unmountComponentAtNode(store[uid].mountNode);\n            delete store[uid];\n        }\n    }, 0);\n}\n\ninterface IReparentableProps {\n    uid: string;\n    children: React.ReactElement\n}\n\nexport default class Reparentable extends Component<IReparentableProps> {\n    private el: any;\n    componentDidMount() {\n        const mountNode = getMountNode(this.props.uid);\n        this.el.appendChild(mountNode);\n\n        this.renderChildrenIntoNode(mountNode);\n    }\n\n    componentDidUpdate() {\n        const mountNode = getMountNode(this.props.uid);\n        this.renderChildrenIntoNode(mountNode);\n    }\n\n    componentWillUnmount() {\n        removeMountNode(this.props.uid);\n    }\n\n    renderChildrenIntoNode(node: Element) {\n        // We use this instead of `render` because this also handles\n        // passing the context\n        ReactDOM.unstable_renderSubtreeIntoContainer(this, this.props.children, node);\n    }\n\n    render() {\n        return <div ref={(el) => { this.el = el; }}>\n\n        </div>;\n    }\n}","import {useDrag} from \"react-dnd\";\nimport styled from \"styled-components\";\nimport * as React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {AppState} from \"../../store/store\";\nimport Reparentable from \"./Reparentable\";\n\nconst DraggableWindow = (props: { className?: string, windowId: number, children: React.ReactElement | undefined }) => {\n    const currentTab = useSelector((state: AppState) => state.layout.currentTab);\n    const nodeId = useSelector((state: AppState) => state.layout.tabs[currentTab].windowToNode[props.windowId]);\n    const [{opacity}, drag] = useDrag({\n        item: {\n            type: \"draggableWindow\",\n            windowId: props.windowId,\n            nodeId: nodeId\n        },\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.5 : 1,\n        }),\n    });\n    return (\n        <div ref={drag} style={{opacity}} className={props.className}>\n            <Reparentable uid={\"\" + props.windowId}>\n                {props.children || <></>}\n            </Reparentable>\n        </div>\n    )\n};\n\nexport default styled(DraggableWindow)`\n  width: 100%;\n  height: 100%;\n  max-width: 100%;\n  max-height: 100%;\n`","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport {useDrop} from \"react-dnd\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {moveWindowBetweenNodes, openNewWindow} from \"../../store/ducks/layout/actions\";\nimport WindowSelect from \"./WindowSelect\";\nimport windowFactory from \"./WindowFactory\";\nimport DraggableWindow from \"./DraggableWindow\";\nimport {AppState} from \"../../store/store\";\n\nconst DockHeader = styled.div`\n  color: #888;\n  height: 1.5rem;\n  width: 100%;\n  background: #DDD;\n  display: flex;\n  flex-direction: row;\n  line-height: 1.5rem;\n  margin: auto 0;\n  justify-content: space-between;\n`;\n\nconst HeaderTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  line-height: 1.5rem;\n  margin: auto 0;\n  padding-left: 5px;\n`;\n\nconst HeaderIcons = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-right: 5px;\n  line-height: 1.5rem;\n  margin: auto 0;\n  svg {\n    padding-left: 5px;\n    cursor: pointer;\n  }\n`;\n\nconst DockingAreaRaw = (props: { children: React.ReactElement, isOver: boolean, className?: string }) => {\n    return <div className={props.className}>{props.children}</div>\n};\n\nconst DockingArea = styled(DockingAreaRaw)`\n  flex-grow: 1;\n  background: ${props => props.isOver ? \"#CCC\" : \"#FFF\"};\n  overflow: auto;\n`;\n\nconst DockUnstyled = (props: {\n    onSplitVertical: () => void\n    onSplitHorizontal: () => void\n    onClose: () => void\n    className?: string\n    id: string\n}) => {\n    const dispatch = useDispatch();\n    const currentTab = useSelector((state: AppState) => state.layout.currentTab);\n    const dockedWindow = useSelector((state: AppState) => state.layout.tabs[currentTab].nodeToWindow[props.id]);\n    const windowType = useSelector((state: AppState) => state.layout.windowIdToType[dockedWindow]);\n    const onDrop = (nodeId: string, windowId: number) => {\n        if (nodeId === props.id) {\n            return;\n        }\n        if (dockedWindow) {\n            return;\n        }\n        dispatch(moveWindowBetweenNodes(nodeId, props.id, windowId))\n    };\n    const [{isOver}, drop] = useDrop({\n        accept: \"draggableWindow\",\n        drop: (item, monitor) => onDrop(monitor.getItem().nodeId, monitor.getItem().windowId),\n        collect: monitor => ({\n            isOver: monitor.isOver(),\n        }),\n    });\n\n    const onWindowSelect = (value: string) => {\n        const {id} = windowFactory.createWindow(value);\n        dispatch(openNewWindow(props.id, id, value));\n        console.log(\"selected \" + value);\n    };\n\n    const renderer = windowFactory.getRenderer(windowType);\n    return (\n        <div className={props.className} ref={drop}>\n            <DockHeader>\n                <HeaderTitle>\n                    ID: [{props.id}]\n                </HeaderTitle>\n                <HeaderIcons>\n                    <FontAwesomeIcon icon=\"grip-lines\" onClick={props.onSplitHorizontal}/>\n                    <FontAwesomeIcon icon=\"grip-lines-vertical\" onClick={props.onSplitVertical}/>\n                    {props.id !== \"\" && <FontAwesomeIcon icon=\"times\" onClick={props.onClose}/>}\n                </HeaderIcons>\n            </DockHeader>\n            <DockingArea isOver={isOver && !dockedWindow}>\n                {dockedWindow ?\n                    <DraggableWindow windowId={dockedWindow}>\n                        <div>\n                            {renderer && renderer()}\n                        </div>\n                    </DraggableWindow> :\n                    <WindowSelect id={props.id} placeholder={\"Select window\"} onSelected={onWindowSelect}/>}\n            </DockingArea>\n        </div>\n    )\n};\n\nexport default styled(DockUnstyled)`\n  background: #FAFAFA;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  flex-grow: 1;\n  flex-direction: column;\n`;","import {ILayoutNode} from \"../../store/ducks/layout/types\";\nimport {useDispatch} from \"react-redux\";\nimport {\n    closeNode,\n    splitNodeHorizontally,\n    splitNodeVertically,\n    updateSplitValue\n} from \"../../store/ducks/layout/actions\";\nimport SplitPane from \"react-split-pane\";\nimport React, {useRef} from \"react\";\nimport Dock from \"./Dock\";\nimport styled from \"styled-components\";\n\nconst SplitPaneStyled = styled(SplitPane)`\n  //position: relative !important;\n`;\n\nconst SplitWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst LayoutNode = (props: { node: ILayoutNode }) => {\n    const dispatch = useDispatch();\n    const currentNode = props.node;\n    const onClose = () => dispatch(closeNode(currentNode.id));\n    const onSplitHorizontal = () => dispatch(splitNodeHorizontally(currentNode.id));\n    const onSplitVertical = () => dispatch(splitNodeVertically(currentNode.id));\n    const splitRef = useRef(null);\n\n    const onDragFinished = (value: any) => {\n        const width = props.node.split === \"vertical\" ?\n            // @ts-ignore // typescript, wtf\n            splitRef.current.offsetWidth : splitRef.current.offsetHeight;\n        dispatch(updateSplitValue(currentNode.id, 100 * value / width))\n    };\n\n    switch (currentNode.split) {\n        case \"vertical\":\n        case \"horizontal\":\n            if (currentNode.a === undefined || currentNode.b === undefined) {\n                return <>Error</>\n            }\n            return (\n                <SplitWrapper ref={splitRef}>\n                    <SplitPaneStyled\n                        split={currentNode.split}\n                        defaultSize={currentNode.splitValue + \"%\"}\n                        onDragFinished={onDragFinished}\n                        maxSize={-1}\n                        minSize={0}\n                    >\n                        <LayoutNode node={currentNode.a}/>\n                        <LayoutNode node={currentNode.b}/>\n                    </SplitPaneStyled>\n                </SplitWrapper>\n            );\n        case undefined:\n            return (\n                <Dock onClose={onClose}\n                      onSplitHorizontal={onSplitHorizontal}\n                      onSplitVertical={onSplitVertical}\n                      id={currentNode.id}/>\n            )\n\n    }\n    return <></>\n};\n\nexport default LayoutNode;","import {useSelector} from \"react-redux\";\nimport {AppState} from \"../../store/store\";\nimport React from \"react\";\nimport LayoutNode from \"./LayoutNode\";\nimport styled from \"styled-components\";\n\nconst Tab = (props: {className?: string }) => {\n    const currentTab = useSelector((state: AppState) => state.layout.currentTab);\n    const tab = useSelector((store: AppState) => store.layout.tabs[currentTab]);\n    if (tab === undefined) {\n        console.log(\"tab does not exits\");\n        return <></>\n    }\n    return (\n        <div className={props.className}>\n            <LayoutNode node={tab.rootNode}/>\n        </div>\n    )\n};\n\nexport default styled(Tab)`\n  flex-grow: 1;\n  display: flex;\n  position: relative;\n`","import {DndProvider} from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport TabsTopBar from \"./TabsTopBar\";\nimport Tab from \"./Tab\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst TabWrapper = styled.div`\n  flex-grow: 1;\n  display: flex;\n  position: relative;\n`;\n\nconst Layout = (props: { className?: string }) => {\n    return (\n        <div className={props.className}>\n            <DndProvider backend={Backend}>\n                <TabsTopBar/>\n                <TabWrapper>\n                    <Tab/>\n                </TabWrapper>\n            </DndProvider>\n        </div>\n    );\n};\n\nexport default styled(Layout)`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`","import React from 'react';\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faGripLines, faGripLinesVertical, faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport configureStore from \"./store/store\";\nimport {Provider} from \"react-redux\";\nimport GlobalStyle from \"./view/GlobalStyle\";\nimport windowFactory from \"./view/layout/WindowFactory\";\nimport ExampleDropdown from \"./view/exampleWindows/ExampleDropdown\";\nimport ExampleForm from \"./view/exampleWindows/ExampleForm\";\nimport Layout from \"./view/layout/Layout\";\n\nlibrary.add(faTimes, faGripLines, faGripLinesVertical);\n\nexport const store = configureStore();\n\nwindowFactory.addTemplate(\"Dropdown\", () => {return (<ExampleDropdown/>)});\nwindowFactory.addTemplate(\"Form\", () => {return (<ExampleForm/>)});\n\nexport default () => {\n    return (\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <GlobalStyle/>\n                <Layout/>\n            </PersistGate>\n        </Provider>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}